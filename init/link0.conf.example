# set up shell-like variables

# Use DPDKARGS to specify DPDK related arguments (other ipfixprobe arguments
# are passed after  "--")
# WARNING - this does not work with non-DPDK version of ipfixprobe,
# which does not know such arguments! So this should be commented out.

# DDPKARGS="-c 0x1 -a 0000:00:06.1"

# List of activated input plugins (arguments for -i parameter)
#   Specify array of input plugins with arguments using INPUT[], indexes (subscripts) must be unique
INPUT[0]="ndp;dev=/dev/nfb0:0"
INPUT[1]="ndp;dev=/dev/nfb0:1"

# Other examples:
#
# INPUT[0]="dpdk;p=0;q=16;i=0"

# INPUT[0]="raw;i=wlo1"

# INPUT[0]="pcap;i=wlo1"

# or specify inputs using loop
# for i in `seq 0 15`; do
# INPUT[$i]="ndp;dev=/dev/nfb0:$i"
# done

# List of activated process plugins (arguments for -p parameter), to skip plugins, use "basic" only:
# PROCESS=(basic)
PROCESS=(pstats tls http ssdp "dnssd;txt")


# Link / ODID identifier
LINK=0

# Direction / interface identifier
DIR=0

# Address and port of the IPFIX collector
HOST=127.0.0.1
PORT=4739

# Use UDP yes/no? (instead of TCP)
UDP=yes

# Size of flow cache, exponent to the power of two
CACHE_SIZE=17

# Active and inactive timeout in seconds
ACTIVE_TIMEOUT=300
INACTIVE_TIMEOUT=65
